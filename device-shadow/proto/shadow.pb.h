/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SHADOW_PB_H_INCLUDED
#define PB_SHADOW_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _shadow {
    int32_t red;
    int32_t blue;
    int32_t green;
} shadow;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define shadow_init_default                      {0, 0, 0}
#define shadow_init_zero                         {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define shadow_red_tag                           1
#define shadow_blue_tag                          2
#define shadow_green_tag                         3

/* Struct field encoding specification for nanopb */
#define shadow_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    red,               1) \
X(a, STATIC,   SINGULAR, INT32,    blue,              2) \
X(a, STATIC,   SINGULAR, INT32,    green,             3)
#define shadow_CALLBACK NULL
#define shadow_DEFAULT NULL

extern const pb_msgdesc_t shadow_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define shadow_fields &shadow_msg

/* Maximum encoded size of messages (where known) */
#define shadow_size                              33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
